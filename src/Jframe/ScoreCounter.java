/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Jframe;

import all_classes.SoundPlay;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.Clip;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

/**
 *
 * @author CETC
 */
public class ScoreCounter extends javax.swing.JDialog {

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;

    /**
     * Creates new form ScoreCounter
     */
    Clip cl=SoundPlay.play("count.wav");
    public ScoreCounter(java.awt.Frame parent, boolean modal,int score,int life,int k) {
       super(parent, modal);
        initComponents();
        sc=score;
        li=life;
        kk=k;
        cl.start();
        cl.loop(Clip.LOOP_CONTINUOUSLY);
        Thread Counting_thread;
        Counting_thread v=new Counting_thread();
        v.start();
        bg.setIcon(new javax.swing.ImageIcon("img\\icon\\scoreN.png"));
        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        point = new javax.swing.JLabel();
        Rlife = new javax.swing.JLabel();
        Rtime = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        sum = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        jLabel9.setText("jLabel9");

        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(481, 345));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(481, 345));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        getContentPane().setLayout(null);

        point.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        point.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        point.setText("0");
        getContentPane().add(point);
        point.setBounds(320, 170, 60, 30);

        Rlife.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Rlife.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Rlife.setText("0");
        getContentPane().add(Rlife);
        Rlife.setBounds(240, 200, 50, 30);

        Rtime.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Rtime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Rtime.setText("0");
        getContentPane().add(Rtime);
        Rtime.setBounds(250, 230, 40, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("2500");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(324, 200, 60, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("1000");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(324, 230, 60, 30);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("X");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(294, 200, 20, 30);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("X");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(290, 230, 30, 30);

        sum.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sum.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sum.setText("0");
        getContentPane().add(sum);
        sum.setBounds(200, 280, 170, 20);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel12);
        jLabel12.setBounds(440, 0, 40, 40);
        getContentPane().add(bg);
        bg.setBounds(-6, 0, 490, 340);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
     
    }//GEN-LAST:event_closeDialog

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        cl.stop();
        this.dispose();
    }//GEN-LAST:event_jLabel12MouseClicked
    
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ScoreCounter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ScoreCounter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ScoreCounter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ScoreCounter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Rlife;
    private javax.swing.JLabel Rtime;
    private javax.swing.JLabel bg;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel point;
    private javax.swing.JLabel sum;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
    int sc,li,kk;
    boolean flag=true;
    class Counting_thread extends Thread{
      
      public void run(){
          while(flag)
          {
        
              point.setText(String.valueOf(sc));
        for(int i=0;i<=li;i++)
        {
            Rlife.setText(String.valueOf(i));
                    try {
                  Thread.sleep(500);
              } catch (InterruptedException ex) {
                  Logger.getLogger(ScoreCounter.class.getName()).log(Level.SEVERE, null, ex);
              }
        }
        for(int i=0;i<=kk;i++)
        {
        Rtime.setText(String.valueOf(i));
        try {
                  Thread.sleep(100);
              } catch (InterruptedException ex) {
                  Logger.getLogger(ScoreCounter.class.getName()).log(Level.SEVERE, null, ex);
              }
        }
        int temp=sc+(2500*li)+(kk*1000);
        for(int i=0;i<=temp;i=i+10)
        {
        sum.setText(String.valueOf(i));   
        try {
                  Thread.sleep(1);
              } catch (InterruptedException ex) {
                  Logger.getLogger(ScoreCounter.class.getName()).log(Level.SEVERE, null, ex);
              }
        }
        cl.stop();
        this.suspend();
          }
   
  }
}
}
